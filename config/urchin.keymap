
/*
 * Copyright (c) 2020 duckyb
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Layer definitions
#define BASE 0
#define SYMBOL 1
#define NUMBER 2
#define SYSTEM 3
#define MEDIA 4
#define FUNCTION 5
// -----------------

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <150>;
};

&sk {
	// don't release mods on other mods presses
	ignore-modifiers;
};


/ {
    #define TAPHOLD_SYMBOL(NAME, TAP, HOLD) \
         NAME: NAME { \
            compatible = "zmk,behavior-hold-tap"; \
            label = ZMK_MACRO_STRINGIFY(NAME); \
            #binding-cells = <2>; \
            tapping-term-ms = <TAPPING_TERM>; \
            flavor = "tap-preferred"; \
            quick-tap-ms = <QUICK_TAP_TERM>; \
            require-prior-idle-ms = <QUICK_TAP_TERM>; \
            bindings = <HOLD>, <TAP>; \
        };

	macros {
		// sometimes my device thinks a modifier is being held down
		// pressing all modifiers fixes it.
		unstick: unstick {
			label = "ZM_unstick";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&kp LSHIFT &kp RSHIFT &kp LCTRL &kp RCTRL &kp LALT &kp RALT &kp LGUI &kp RGUI>;
		};
		left_10: left_10 {
			label = "left_10";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&kp LEFT>, <&kp LEFT>, <&kp LEFT>, <&kp LEFT>, <&kp LEFT>, <&kp LEFT>, <&kp LEFT>, <&kp LEFT>, <&kp LEFT>, <&kp LEFT>;
		};
		right_10: right_10 {
			label = "right_10";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&kp RIGHT>, <&kp RIGHT>, <&kp RIGHT>, <&kp RIGHT>, <&kp RIGHT>, <&kp RIGHT>, <&kp RIGHT>, <&kp RIGHT>, <&kp RIGHT>, <&kp RIGHT>;
		};
		up_10: up_10 {
			label = "up_10";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&kp UP>, <&kp UP>, <&kp UP>, <&kp UP>, <&kp UP>, <&kp UP>, <&kp UP>, <&kp UP>, <&kp UP>, <&kp UP>;
		};
		down_10: down_10 {
			label = "down_10";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&kp DOWN>, <&kp DOWN>, <&kp DOWN>, <&kp DOWN>, <&kp DOWN>, <&kp DOWN>, <&kp DOWN>, <&kp DOWN>, <&kp DOWN>, <&kp DOWN>;
		};
		backspace_10: backspace_10 {
			label = "backspace_10";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&kp BACKSPACE>, <&kp BACKSPACE>, <&kp BACKSPACE>, <&kp BACKSPACE>, <&kp BACKSPACE>, <&kp BACKSPACE>, <&kp BACKSPACE>, <&kp BACKSPACE>, <&kp BACKSPACE>, <&kp BACKSPACE>;
		};
		delete_10: delete_10 {
			label = "delete_10";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&kp DELETE>, <&kp DELETE>, <&kp DELETE>, <&kp DELETE>, <&kp DELETE>, <&kp DELETE>, <&kp DELETE>, <&kp DELETE>, <&kp DELETE>, <&kp DELETE>;
		};
	};

	keymap {
		compatible = "zmk,keymap";

		default_layer {
			label = "Default";
			bindings = <
			&kp Q &kp W &kp E &kp R &kp T    						&kp Y &kp U &kp I &kp O &kp P
			&mt LSHFT A &mt LCTRL S &mt LALT D &mt LGUI F &kp G		&kp H &mt RGUI J &mt RALT K &mt RCTRL L &mt RSHFT SEMI
			&lt FUNCTION Z &kp X &kp C &kp V &kp B   				&kp N &kp M &kp COMMA &kp DOT &lt MEDIA SLASH
			&mt LS(LC(LALT)) CAPS &lt SYMBOL BSPC    				&lt NUMBER SPACE &lt SYSTEM ENTER
			>;
		};

		symbol_layer {
			label = "Symbol";
			bindings = <
			&kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT							&kp PRCNT &kp AMPERSAND &kp STAR &kp LPAR &kp RPAR
			&mt LSHFT GRAVE &kp LCTRL &mt LALT MINUS &mt LGUI EQUAL &none		&none &mt RGUI SINGLE_QUOTE &mt RALT BACKSLASH &mt RCTRL LPAR &mt RSHFT RPAR
			&kp TILDE &kp LG(GRAVE) &kp UNDER &kp PLUS &none    				&none &kp DOUBLE_QUOTES &kp PIPE &kp LS(LBKT) &kp LS(RBKT)
			&trans &trans    													&trans &trans
			>;
		};

		number_layer {
			label = "Number";
			bindings = <
			&kp N1 &kp N2 &kp N3 &kp N4 &kp N5				&kp N6 &kp N7 &kp N8 &kp N9 &kp N0
			&kp LSHFT &kp LCTRL &kp LALT &kp LGUI &none    	&none &kp RGUI &kp RALT &kp RCTRL &kp RSHFT
			&none &none &none &none &none					&none &none &none &none &none
			&trans &kp DEL    								&trans &trans
			>;
		};

		system_layer {
			label = "System";
			bindings = <
			&kp ESC &none &none &none &none    									&none &kp PG_DN &kp PG_UP &none &none
			&mt LSHFT TAB &mt LCTRL LEFT &mt LALT UP &mt LGUI DOWN &kp RIGHT	&kp LEFT &mt RGUI DOWN &mt RALT UP &mt RCTRL RIGHT &kp RSHFT
			&kp CAPS &left_10 &up_10 &down_10 &right_10    						&none &none &none &none &none
			&delete_10 &backspace_10    										&trans &trans
			>;
		};

		media_layer {
			label = "Media";
			bindings = <
			&unstick &none &none &none &none				&none &none &none &none &bootloader
			&kp LSHFT &kp LCTRL &kp LALT &kp LGUI &none  	&kp C_MUTE &mt RGUI C_NEXT &mt RALT C_VOL_UP &mt RCTRL C_BRI_UP &kp RSHFT
			&none &none &none &none &none					&kp C_PLAY_PAUSE &kp C_PREV &kp C_VOL_DN &kp C_BRI_DN &none
			&trans &trans    								&trans &trans
			>;
		};

		function_layer {
			label = "Function";
			bindings = <
			&kp F1 &kp F2 &kp F3 &kp F4 &kp F5    					&kp F6 &kp F7 &kp F8 &kp F9 &kp F10
			&mt LSHFT F11 &mt LCTRL F12 &kp LALT &kp LGUI &none		&none &kp RGUI &kp RALT &kp RCTRL &kp RSHFT
			&none &none &none &none &bootloader    					&none &none &none &none &none
			&trans &trans    										&trans &trans
			>;
		};
	};
};
